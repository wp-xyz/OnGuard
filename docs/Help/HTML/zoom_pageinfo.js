pageinfo = [[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null],
	[0,0,0,0,null]];
pagedata = [ ["api_reference.html","Low-Level Routines","Generate Key Routines GenerateRandomKeyPrim GenerateMD5KeyPrim GenerateTMDKeyPrim  Modifier Routines ApplyModifierToKeyPrim CreateMachineID G...",""],
["applymodifiertokeyprim.html","ApplyModifierToKeyPrim  procedure ApplyModifierToKeyPrim (Modifier : LongInt; var Key; KeySize : Cardinal);","ApplyModifierToKeyPrim Xor&#39;s the Modifier value with the Key returning the modified key as the Key parameter.",""],
["basedate.html","BaseDate","BaseDate : LongInt = 0;  This is the date used as the starting point for all date fields in the TCode structure. It is defined as a constant ...",""],
["buffertohex.html","BufferToHex  function BufferToHex (const Buf; BufSize : Cardinal) : string;","BufferToHex converts one or more bytes to hex. Buf contains one or more bytes and BufSize if the number of bytes in Buf. The hexadecimal version o...",""],
["buffertohexbytes.html","BufferToHexBytes  function BufferToHexBytes (const Buf; BufSize : Cardinal) : string;","BufferToHexBytes performs the same operation as the BufferToHex function except that the function result is formatted to represent an array of hex...",""],
["checknetaccessfile.html","CheckNetAccessFile  function CheckNetAccessFile (const NetAccess : TNetAccess) : Boolean;  TNetAccess = packed record    Fh         : Integer;    Key        : TKey;    CheckValue : Word;    Index      : Word;  end;","CheckNetAccessFile verifies that the net access file referenced by NetAccess has at least one slot that is not in use.",""],
["contributors.html","Contributors","The original project, v1.13, was open sourced by Turbo Power on 2003-Jan-07.",""],
["createmachineid.html","CreateMachineID","This is a private function first added in version 1.05.",""],
["createnetaccessfile.html","CreateNetAccessFile  function CreateNetAccessFile (const FileName : string; const Key : TKey; Count : Word) : Boolean;","CreateNetAccessFile creates a net access for Count users file using FileName as the name of the file and Key to encode the file.",""],
["createnetaccessfileex.html","CreateNetAccessFileEx  function CreateNetAccessFileEx (const FileName : string; const Key : TKey; const Code : TCode) : Boolean;","CreateNetAccessFileEx creates a net access file using the access count value from a previously encoded net access Code.",""],
["decdayscode.html","DecDaysCode  procedure DecDaysCode (const Key : TKey; var Code : TCode);","DecDaysCode reduces the internal \"days count\" value by one and returns the modified code as the Code parameter.",""],
["decodenafcountcode.html","DecodeNAFCountCode  function DecodeNAFCountCode (const Key : TKey; const Code : TCode) : LongInt;","DecodeNAFCountCode uses Key to decode Code and returns the number of authorized users as the function result.",""],
["decusagecode.html","DecUsageCode  procedure DecUsageCode (const Key : TKey; var Code : TCode);","DecUsageCode reduces the internal \"usage count\" value by one and returns the modified code as the Code parameter.",""],
["encodenafcountcode.html","EncodeNAFCountCode  procedure EncodeNAFCountCode (const Key : TKey; Count : Cardinal;  var Code : TCode);","EncodeNAFCountCode uses Key to create and encode the usage Count value creating a network code.",""],
["expanddate.html","ExpandDate  function ExpandDate (D : Word) : TDateTime;","ExpandDate translates an OnGuard date offset to an actual date.",""],
["generatedatemodifierprim.html","GenerateDateModifierPrim  function GenerateDateModifierPrim (D : TDateTime) : LongInt;","GenerateDateModifierPrim produces a key modifier based on the date D.",""],
["generatemachinemodifierprim.html","GenerateMachineModifierPrim  function GenerateMachineModifierPrim: LongInt;","GenerateMachineModifierPrim produces a key modifier based on specific hardware information.",""],
["generatemd5keyprim.html","GenerateMD5KeyPrim  procedure GenerateMD5KeyPrim (var Key: TKey; const Str : string);","GenerateMD5KeyPrim produces a Key by applying the MD5 hash to the string passed as Str",""],
["generaterandomkeyprim.html","GenerateRandomKeyPrim  procedure GenerateRandomKeyPrim (var Key; KeySize : Cardinal);","GenerateRandomKeyPrim produces a Key using a random numbers.",""],
["generatestringmodifierprim.html","GenerateStringModifierPrim  function GenerateStringModifierPrim (const S : string) : LongInt;","GenerateStringModifierPrim produces a key modifier by applying a hash algorithm to the string passed in S.",""],
["generatetmdkeyprim.html","GenerateTMDKeyPrim  procedure GenerateTMDKeyPrim (var Key; KeySize : Cardinal; const Str : string);","GenerateTMDKeyPrim produces key by applying a hash algorithm to the string passed in Str.",""],
["generateuniquemodifierprim.html","GenerateUniqueModifierPrim  function GenerateUniqueModifierPrim: LongInt;","GenerateUniqueModifierPrim produces a key modifier using random numbers.",""],
["getcodetype.html","GetCodeType  function GetCodeType (const Key : TKey; const Code : TCode) : TCodeType;  TCodeType = (ctDate, ctDays, ctRegistration, ctSerialNumber, ctUsage, ctNetwork, ctSpecial, ctUnknown);","GetCodeType returns the type of code passed as the Code parameter.",""],
["getdatecodeend.html","GetDateCodeEnd","GetDateCodeEnd returns the end date stored in the Code.",""],
["getdatecodestart.html","GetDateCodeStart","GetDateCodeStart returns the start date stored in the Code.",""],
["getdatecodevalue.html","GetDateCodeValue  function GetDateCodeValue (const Key : TKey; const Code : TCode) : TDateTime;","GetDateCodeValue returns the expiration date stored in the Code.",""],
["getdayscodevalue.html","GetDaysCodeValue  function GetDaysCodeValue (const Key : TKey; const Code : TCode) : LongInt;","GetDaysCodeValue returns the expiration date stored in the Code.",""],
["getexpirationdate.html","GetExpirationDate  function GetExpirationDate (const Key : TKey; const Code : TCode) : TDateTime;","GetExpirationDate returns the date that the code passed as the Code parameter expires.",""],
["getnetaccessfileinfo.html","GetNetAccessFileInfo  function GetNetAccessFileInfo (const FileName : string; const Key : TKey; var NetAccessInfo : TNetAccessInfo) : Boolean;  TNetAccessInfo = packed record    Total   : Cardinal;    Locked  : Cardinal;    Invalid : Cardinal;  end;","GetNetAccessFileInfo obtains information about the specified network access file.",""],
["getserialnumbercodevalue.html","GetSerialNumberCodeValue  function GetSerialNumberCodeValue (const Key : TKey; const Code : TCode) : LongInt;","GetSerialNumberCodeValue returns the serial number that was used to create the Code.",""],
["getspecialcodevalue.html","GetSpecialCodeValue  function GetSpecialCodeValue (const Key : TKey; const Code : TCode) : LongInt;","GetSpecialCodeValue returns the value that was used to create the Code.",""],
["getusagecodevalue.html","GetUsageCodeValue  function GetUsageCodeValue (const Key : TKey; const Code : TCode) : LongInt;","GetUsageCodeValue returns the current usage count value store in the Code.",""],
["hexstringiszero.html","HexStringIsZero  function HexStringIsZero (const Hex : string) : Boolean;","HexStringIsZero returns true if the hexadecimal string passed as Hex consists entirely of 0&#39;s, otherwise false.",""],
["hextobuffer.html","HexToBuffer  function HexToBuffer (const Hex : string; var Buf; BufSize : Cardinal) : Boolean;","HexToBuffer converts the hexadecimal string in Hex to bytes that are stored in Buf.",""],
["history.html","History","Version 1.13 is the original source released by TurboPower.",""],
["initdatecode.html","InitDateCode  procedure InitDateCode (const Key : TKey; StartDate, EndDate : TDateTime; var Code : TCode);","InitDateCode creates and initializes a date code using Key, StartDate, and EndDate.",""],
["initdatecodeex.html","InitDateCodeEx","InitDateCodeEx creates and initializes a date code using Key, StartDate, EndDate, and Expires.",""],
["initdayscode.html","InitDaysCode  procedure InitDaysCode (const Key : TKey; Days : Word; Expires : TDateTime; var Code : TCode);","InitDaysCode creates and initializes a days code using Key, Days, and Expires.",""],
["initregcode.html","InitRegCode  procedure InitRegCode (const Key : TKey; const RegStr : string; Expires : TDateTime; var Code : TCode);","InitRegCode creates and initializes a registration code using Key, RegStr, and Expires.",""],
["initserialnumbercode.html","InitSerialNumberCode  procedure InitSerialNumberCode (const Key : TKey;  Serial : LongInt; Expires : TDateTime; var Code : TCode);","InitSerialNumberCode creates and initializes a serial number code using Key, Serial, and Expires.",""],
["initspecialcode.html","InitSpecialCode  procedure InitSpecialCode (const Key : TKey; Value : LongInt; Expires : TDateTime; var Code : TCode);","InitSpecialCode creates and initializes a special code using Key, Value, and Expires.",""],
["initusagecode.html","InitUsageCode  procedure InitUsageCode (const Key : TKey; Count : LongInt; Expires : TDateTime; var Code : TCode);","InitUsageCode creates and initializes a usage code using Key, Count, and Expires.",""],
["initusagecodeunlimited.html","InitUsageCodeUnlimited","InitUsageCodeUnlimited creates and initializes a usage code using Key, Count=65535, Expires=65535, and LastChange=1.",""],
["install.html","Install","In the packages folder you will find the development tool package files.",""],
["isapponnetwork.html","IsAppOnNetwork  function IsAppOnNetwork (const ExePath : string) : Boolean;","IsAppOnNetwork returns true if the drive specified in ExePath is a remote drive, otherwise false.",""],
["isdatecodeexpired.html","IsDateCodeExpired  function IsDateCodeExpired (const Key : TKey; const Code : TCode) : Boolean;","IsDateCodeExpired returns true if the Code has expired, otherwise false.",""],
["isdatecodevalid.html","IsDateCodeValid  function IsDateCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsDateCodeValid returns true if Code is a valid date code, otherwise false.",""],
["isdayscodeexpired.html","IsDaysCodeExpired  function IsDaysCodeExpired (const Key : TKey; const Code : TCode) : Boolean;","IsDaysCodeExpired returns true if the Code has expired, otherwise false.",""],
["isdayscodevalid.html","IsDaysCodeValid  function IsDaysCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsDaysCodeValid returns true if Code is a valid days code, otherwise false.",""],
["isregcodeexpired.html","IsRegCodeExpired  function IsRegCodeExpired (const Key : TKey; const Code : TCode) : Boolean;","IsRegCodeExpired returns true if the Code has expired, otherwise false.",""],
["isregcoderegisteredto.html","IsRegCodeRegisteredTo","IsRegCodeRegisteredTo returns true if Code is a valid registration code and the registration sting matches, otherwise false.",""],
["isregcodevalid.html","IsRegCodeValid  function IsRegCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsRegCodeValid returns true if Code is a valid registration code, otherwise false.",""],
["isserialnumbercodeexpired.html","IsSerialNumberCodeExpired  function IsSerialNumberCodeExpired (const Key : TKey; const Code : TCode) : Boolean;","IsSerialNumberCodeExpired returns true if the Code has expired, otherwise false.",""],
["isserialnumbercodevalid.html","IsSerialNumberCodeValid  function IsSerialNumberCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsSerialNumberCodeValid returns true if Code is a valid serial number code, otherwise false.",""],
["isserialnumbercodevalidfor.html","IsSerialNumberCodeValidFor","IsSerialNumberCodeValidFor returns true if Code is a valid serial number code and the SerialNumber matches, otherwise false.",""],
["isspecialcodeexpired.html","IsSpecialCodeExpired  function IsSpecialCodeExpired (const Key : TKey; const Code : TCode) : Boolean;","IsSpecialCodeExpired returns true if the Code has expired, otherwise false.",""],
["isspecialcodevalid.html","IsSpecialCodeValid  function IsSpecialCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsSpecialCodeValid returns true if Code is a valid special code, otherwise false.",""],
["isspecialcodevalidfor.html","IsSpecialCodeValidFor","IsSpecialCodeValidFor returns true if Code is a valid special code and the Value matches, otherwise false.",""],
["isusagecodeexpired.html","IsUsageCodeExpired  function IsUsageCodeExpired (const Key : TKey; const Code: TCode) : Boolean;","IsUsageCodeExpired returns true if the Code has expired, otherwise false.",""],
["isusagecodevalid.html","IsUsageCodeValid  function IsUsageCodeValid (const Key : TKey; const Code : TCode) : Boolean;","IsUsageCodeValid returns true if Code is a valid usage code, otherwise false.",""],
["license.html","License","TurboPower OnGuard is released under the Mozilla Public License 1.1 (MPL 1.1).",""],
["locknetaccessfile.html","LockNetAccessFile  function LockNetAccessFile (const FileName : string; const Key : TKey; var NetAccess : TNetAccess) : Boolean;  TNetAccess = packed record    Fh         : Integer;    Key        : TKey;    CheckValue : Word;    Index      : Word;  end;","LockNetAccessFile locks an access slot in the network access file specified by FileName and returns false if an error occurs.",""],
["mixblock.html","MixBlock","Enter topic text here.",""],
["nochm.html","No title","This skin is only for use with WebHelp output. Use the Premium Pack HTML Help/CHM skins for CHM output. ",""],
["nomobilewarning.html","Unsupported Mobile Browser","Incompatible mobile browser warning",""],
["ogabout0unit.html","OgAbout0","This unit provides the About dialog. It also provides the TOgAboutProperty which is used as a Property Editor in the IDE.  VCL = OgAbout0.dfm...",""],
["ogcodesign_isexecodesigned.html","OgCodeSign.IsExeCodeSigned","Returns TRUE if the current application is code signed and the checksum matches",""],
["ogcodesign_isexesignedbyname.html","OgCodeSign.IsExeSignedByName","Returns TRUE if the application is code signed, the checksum matches, and the certificate&#39;s SubjectName matches.",""],
["ogcodesign_isfilecodesigned.html","OgCodeSign.IsFileCodeSigned","Returns TRUE if the file is code signed and the checksum matches.",""],
["ogcodesign_isfilesignedbyname.html","OgCodeSign.IsFileSignedByName","Returns TRUE if the file is code signed, the checksum matches, and the certificate&#39;s SubjectName matches.",""],
["ogcodesign_unit.html","OgCodeSign Unit","A set of API functions to validate a file with a digital certificate.",""],
["ogconstunit.html","OgConst","Enter topic text here.",""],
["ogfileunit.html","OgFile","This unit contain file related routines formerly located in ogutil.",""],
["ogfile_flushfilebuffers.html","OgFile.FlushFileBuffers","Support for the Windows API function FlushFileBuffers.",""],
["ogfile_getfilesize.html","OgFile.GetFileSize","Generic function to get the size of a file. Win32 and Win64 pass through to the Windows API function GetFileSize.  Platform Delphi FPC / Laza...",""],
["ogfile_lockfile.html","OgFile.LockFile","Support for Windows API function LockFile.  Platform Delphi FPC / Lazarus Win16 Yes Yes Win32 n/a No Win64 n/a No Linux No Yes MacOS Yes &#38;nbs...",""],
["ogfile_unlockfile.html","OgFile.UnlockFile","Support for Windows API function UnlockFile.  Platform Delphi FPC / Lazarus Win16 Yes Yes Win32 n/a No Win64 n/a No Linux No Yes MacOS Yes &#38;n...",""],
["ogfirstunit.html","OgFirst","The OgFirst unit provides routines that allow you to detect when a second instance of an application is being executed and to force the previous i...",""],
["ogfirst_activatefirstinstance.html","ActivateFirstInstance  procedure OgFirst.ActivateFirstInstance;  {32-bit version}  procedure OgFirst.ActivateFirstInstance(const MainWindowCaption, MainWindowClass : string);  {16-bit version}","ActivateFirstInstance locates an application’s main window and then makes it the active window. ",""],
["ogfirst_isfirstinstance.html","IsFirstInstance  function OgFirst.IsFirstInstance : Boolean;","IsFirstInstance determines whether this is the first instance of a program. ",""],
["ognetwrkunit.html","OgNetWrk","The OgNetWrk unit provides the network access component.",""],
["ognetwrkunit_2.html","OgNetWrkUtil","The OgNetWrkUtil unit provides the network access classes, types and API routines.",""],
["ogproexeunit.html","OgProExe","Enter topic text here.   Types   TCheckedExeEvent = procedure(Sender : TObject; Status : TExeStatus) of object;  Classes TOgProtect...",""],
["ogproexeunit_2.html","OgProExeUtil","Enter topic text here.   Types   TExeStatus = (     exeSuccess,             {no error}   &#38;n...",""],
["ogproexeutil_filecrc32.html","OgProExeUtil.FileCRC32","Utility function to calculate the CRC of the entire file FileName.",""],
["ogproexeutil_isexetampered.html","OgProExeUtil.IsExeTampered","The default result is exeIntegrityError. If the file has a stamp that is not yet used the result will be exeNotStamped.  This function is onl...",""],
["ogproexeutil_isfiletampered.html","OgProExeUtil.IsFileTampered","Use this function to check any file that has been stamped.",""],
["ogproexeutil_protectexe.html","OgProExeUtil.ProtectExe","Checks the file FileName for the stamp. If the file is not found, or can not be opened then False is returned.  If the stamp is found, calcul...",""],
["ogproexeutil_unprotectexe.html","OgProExeUtil.UnprotectExe","Opens the file FileName and sets the stamp to an uninitialized state.",""],
["ogproexeutil_updatechecksum.html","OgProExeUtil.UpdateChecksum","Utility function to update the check sum.",""],
["ogproexeutil_updatecrc32.html","OgProExeUtil.UpdateCRC32","Utility function to update the stamp&#39;s CRC.",""],
["ogregunit.html","OgReg","The OgReg unit contains the TOgCodeGenEditor class which is used as a Property Editor in the IDE.",""],
["ogstamp_unit.html","OgStamp Unit","This file provides the type definitions and the constants required to provide the ability to stamp a file.",""],
["ogutilunit.html","OgUtil","Enter topic text here.  Types   {$IFDEF DELPHI22UP}                         ...",""],
["oldiewarning.html","Internet Explorer Out of Date","Old Internet Explorer update warning",""],
["onguard1unit.html","OnGuard1","This unit contains the TKeyGenerateFrm class.  The Key Type combo box contains the options: Random Standard Text Case-sensitive Text These va...",""],
["onguard2unit.html","OnGuard2","This unit contains the TCodeGenerateFrm class.  The tabs across the top represent the code type and must match the sequence in TCodeType. &#38;nb...",""],
["onguard3unit.html","OnGuard3","This unit contains the TKeyMaintFrm class.   VCL = OnGuard3.dfm CLX = QOnGuard3.xfm Lazarus = lcl\\QOnGuard3   VCL",""],
["onguard4unit.html","OnGuard4","This unit contains the TEditProductFrm class.  Clicking on the  button will open the key generation form in OnGuard1.  VCL = OnGuar...",""],
["onguard5unit.html","OnGuard5","The OnGuard5 unit contains the class TOgCodeProperty which is used as a Property Editor in the IDE.",""],
["onguard6unit.html","OnGuard6","The OnGuard6 unit contains the TModifierFrm class and the TOgModifierProperty class which is used as a Property Editor in the IDE.",""],
["onguard7unit.html","OnGuard7","The OnGuard7 unit contains the class TOgFileNameProperty which is used as a Property Editor in the IDE.",""],
["onguardunit.html","OnGuard","The OnGuard unit provides all of the code components except for TOgNetCode.",""],
["onguard_classes.html","OnGuard_Classes","TOgCodeBase",""],
["onguard_components.html","OnGuard_Components","Delphi       FPC   Kylix  Win16 Win32 Win64 MacOS iOS Android Linux UNIX Win32 Win64 Linux TOgMakeKeys Yes Yes Yes  ...",""],
["onguard_contents.html","Contents","Contents OnGuard is a library of components, classes, and routines that allow you to protect your applications after they are released to the publ...",""],
["onguard_files.html","OnGuard_Files","Enter topic text here.",""],
["onguard_overview.html","OnGuard_Overview","OnGuard is a library of components, classes, and routines that allow you to protect your applications after they are released to the public. Using...",""],
["onguard_types.html","OnGuard_Types","Enter topic text here.    {$IFDEF DELPHI22UP}                          ...",""],
["pcode.html","PCode","Enter topic text here.   PCode = ^TCode;  Defined in ogutil unit.",""],
["platforms.html","Platforms","Component packages are available for Delphi 3 through XE8, Delphi 10 Seattle, Kylix 3, and Lazarus 1.",""],
["resetnetaccessfile.html","ResetNetAccessFile  function ResetNetAccessFile (const FileName : string; const Key : TKey) : Boolean;","ResetNetAccessFile resets invalid access slots by clearing there \"in-uses\" status.",""],
["shrinkdate.html","ShrinkDate  function ShrinkDate (D : TDateTime) : Word;","ShrinkDate translates a date to an OnGuard date offset.",""],
["stringhashelf.html","StringHashElf  function StringHashElf (const Str : string) : LongInt;","StringHashElf produces a hash value based on the text passed in Str.",""],
["t128bit.html","T128Bit","Enter topic text here.   T128Bit     = array [0..3] of LongInt;  Defined in ogutil unit.",""],
["t256bit.html","T256Bit","Enter topic text here.   T256Bit     = array [0..7] of LongInt;  Defined in ogutil unit.",""],
["tcode.html","TCode","Enter topic text here.    TCode = packed record     CheckValue : Word;               {magic...",""],
["tcodestatus.html","TCodeStatus","Enter topic text here.   TCodeStatus = (ogValidCode,    {code is valid but may still be expired}          ...",""],
["tcodetype.html","TCodeType","Enter topic text here.    TCodeType = (ctDate, ctDays, ctRegistration, ctSerialNumber,               ...",""],
["tesmachineinfoset.html","TEsMachineInfoSet","Used to determine what factors are gathered to generate a machine identifier.",""],
["texestatus.html","TExeStatus","Defined in ogstamp.pas.   TExeStatus = (     exeSuccess,             {no error}     exeSize...",""],
["tkey.html","TKey","Enter topic text here.   TKey     = array [0..15] of Byte;  Defined in ogutil unit.",""],
["tkeytype.html","TKeyType","Enter topic text here.   TKeyType = (ktRandom, ktMessageDigest, ktMessageDigestCS);   {order must match order for key generation combobo...",""],
["tlongintrec.html","TLongIntRec","Enter topic text here.    TLongIntRec = record     case Byte of       1: (Lo: Word;        ...",""],
["tmd5context.html","TMD5Context","Enter topic text here.  TMD5Context = array [0..87] of Byte;  Defined in ogutil unit.",""],
["tmd5digest.html","TMD5Digest","Enter topic text here.   TMD5Digest  = array [0..15] of Byte;  Defined in ogutil unit.",""],
["togcodebaseevents.html","TOgCodeBaseEvents","TOgCodeBase Events OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togcodebasemethods.html","TOgCodeBaseMethods","TOgCodeBase Methods CheckCode IsCodeValid",""],
["togcodebaseproperties.html","TOgCodeBaseProperties","TOgCodeBase Properties AutoCheck Code Modifier StoreCode StoreModifier",""],
["togcodebase_autocheck.html","AutoCheck property  property TOgCodeBase.AutoCheck : Boolean  Default: False","AutoCheck determines whether CheckCode is called automatically. ",""],
["togcodebase_checkcode.html","CheckCode method  function TOgCodeBase.CheckCode(Report : Boolean) : TCodeStatus; virtual; abstract;  TCodeStatus = (ogValidCode, ogInvalidCode, ogPastEndDate, ogDayCountUsed, ogRunCountUsed, ogNetCountUsed, ogCodeExpired);","CheckCode checks for a valid release code.  CheckCode is defined as virtual and abstract, which means that each descendant component override...",""],
["togcodebase_class.html","TOgCodeBase Class","The TOgCodeBase class is the ancestor class for the other \"release code\" components. It implements several properties and methods that a...",""],
["togcodebase_code.html","Code property  property TOgCodeBase.Code : string","Code is the release code.  Code is normally generated by another program, encoded using the application’s key, and given to the user to enter...",""],
["togcodebase_iscodevalid.html","IsCodeValid method  function TOgCodeBase.IsCodeValid : Boolean;","IsCodeValid tests to see if the release code is valid. ",""],
["togcodebase_modifier.html","Modifier property  property TOgCodeBase.Modifier : LongInt","Modifier is used to sign the key.  If Modifier is equal to 0, the key is not altered. If Modifier is not equal to 0, it is used to sign the k...",""],
["togcodebase_onchecked.html","OnChecked event  property TOgCodeBase.OnChecked : TCheckedCodeEvent  TCheckedCodeEvent = procedure(Sender : TObject; Status : TCodeStatus) of object;","OnChecked defines an event handler that is called after the release code is checked. ",""],
["togcodebase_ongetcode.html","OnGetCode event  property TOgCodeBase.OnGetCode : TGetCodeEvent  TGetCodeEvent = procedure(Sender : TObject; var Code : TCode) of object;","OnGetCode defines an event handler that is called to get the release code. ",""],
["togcodebase_ongetkey.html","OnGetKey event  property TOgCodeBase.OnGetKey : TGetKeyEvent  TGetKeyEvent = procedure(Sender : TObject; var Key : TKey) of object;","OnGetKey defines an event handler that is called to get the key. ",""],
["togcodebase_ongetmodifier.html","OnGetModifier event  property TOgCodeBase.OnGetModifier : TGetModifierEvent  TGetModifierEvent = procedure(Sender : TObject; var Value : LongInt) of object;","OnGetModifier defines an event handler that is called to get the modifier. ",""],
["togcodebase_storecode.html","StoreCode property  property TOgCodeBase.StoreCode : Boolean  Default: False","StoreCode determines whether the release code is stored in the resource file. ",""],
["togcodebase_storemodifier.html","StoreModifier property  property TOgCodeBase.StoreModifier : Boolean  Default: False","StoreModifier determines whether the modifier is stored in the resource file. ",""],
["togdatecodeevents.html","TOgDateCodeEvents","TOgDateCode Events OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togdatecodemethods.html","TOgDateCodeMethods","TOgDateCode Methods CheckCode GetValue IsCodeValid",""],
["togdatecodeproperties.html","TOgDateCodeProperties","TOgDateCode Properties AutoCheck Code Modifier StoreCode StoreModifier",""],
["togdatecode_component.html","TOgDateCode Component","TOgDateCode implements a Start/End Date release code. Use this release code when you need to limit the amount of time that an application (or spec...",""],
["togdatecode_getvalue.html","GetValue method  function TOgDateCode.GetValue : TDateTime;","GetValue returns the end date embedded in the release code.",""],
["togdayscodeevents.html","TOgDaysCodeEvents","TOgDaysCode Events OnChangeCode OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togdayscodemethods.html","TOgDaysCodeMethods","TOgDaysCode Methods CheckCode Decrease GetValue IsCodeValid",""],
["togdayscodeproperties.html","TOgDaysCodeProperties","TOgDaysCode Properties AutoCheck AutoDecrease Code StoreCode",""],
["togdayscode_autodecrease.html","AutoDecrease property  property TOgDaysCode.AutoDecrease : Boolean  Default: True","AutoDecrease determines whether the day count value is automatically decreased each day the application is run. ",""],
["togdayscode_component.html","TOgDaysCode Component","TOgDaysCode implements a Number of Days Used release code. This release code limits the number of days that an application (or specific features) ...",""],
["togdayscode_decrease.html","Decrease method  procedure TOgDaysCode.Decrease;","Decrease reduces the day count value stored in the release code. ",""],
["togdayscode_getvalue.html","GetValue method  function TOgDaysCode.GetValue : LongInt;","GetValue returns the day count embedded in the release code. ",""],
["togdayscode_onchangecode.html","OnChangeCode event  property OnChangeCode : TChangeCodeEvent  TChangeCodeEvent = procedure(Sender : TObject; Code : TCode) of object;","OnChangeCode defines an event handler that is called when a release code changes. ",""],
["togmakecodesmethods.html","TOgMakeCodesMethods","TOgMakeCodes Methods Execute",""],
["togmakecodesproperties.html","TOgMakeCodesProperties","TOgMakeCodes Properties Code CodeType Key KeyFileName KeyType ShowHints",""],
["togmakecodes_code.html","Code property  property TOgMakeCodes.Code : TCode","Code is the generated release code.  After a successful call to Execute, Code contains the generated release code. Code can represent any one...",""],
["togmakecodes_codetype.html","CodeType property  property TOgMakeCodes.CodeType : TCodeType","CodeType is the type of release code.  If you assign a value to CodeType prior to calling Execute, the corresponding notebook page is display...",""],
["togmakecodes_component.html","TOgMakeCodes Component","TOgMakeCodes is a non-visual component that displays a dialog when its Execute method is called. The dialog allows you to create several types of ...",""],
["togmakecodes_execute.html","Execute method  function TOgMakeCodes.Execute : Boolean;","Execute displays the Code Generation dialog.  Use this method to display the Code Generation dialog so that a release code can be generated. ...",""],
["togmakecodes_key.html","Key run-time property  property TOgMakeCodes.Key : TKey","Key is used to encode and decode the release code. ",""],
["togmakecodes_keyfilename.html","KeyFileName property  property TOgMakeCodes.KeyFileName : string","KeyFileName is the name of the INI file used to store application names and their associated keys. ",""],
["togmakecodes_keytype.html","KeyType run-time property  property TOgMakeCodes.KeyType : TKeyType  TKeyType = (ktRandom, ktMessageDigest, ktMessageDigestCS);  Default: ktMessageDigest","KeyType determines the type of key to generate.  The valid key types are: ktRandom The key is generated using Delphi’s random number generato...",""],
["togmakecodes_showhints.html","ShowHints property  property TOgMakeCodes.ShowHints : Boolean  Default: False","ShowHints determines whether hints are shown for the TOgMakeCodes dialogs.",""],
["togmakekeysmethods.html","TOgMakeKeysMethods","TOgMakeKeys Methods ApplyModifierToKey Execute GenerateDateModifier GenerateKey GenerateMachineModifier GenerateRandomKey GenerateStringModifier G...",""],
["togmakekeysproperties.html","TOgMakeKeysProperties","TOgMakeKeys Properties Key KeyFileName KeyType ShowHints",""],
["togmakekeys_applymodifiertokey.html","ApplyModifierToKey method  procedure TOgMakeKeys.ApplyModifierToKey (Modifier : LongInt; var Key; KeySize : Cardinal);","ApplyModifierToKey alters the specified key.  If Modifier is not zero, this routine alters (signs) the key specified by Key. KeySize is the s...",""],
["togmakekeys_component.html","TOgMakeKeys Component","TOgMakeKeys is a non-visual component that displays a dialog when its Execute method is called. The dialog allows you to create and maintain keys....",""],
["togmakekeys_execute.html","Execute method  function TOgMakeKeys.Execute: Boolean;","Execute displays the Key Maintenance dialog.  Use this method to display the Key Maintenance dialog so that a key can be generated. The dialo...",""],
["togmakekeys_generatedatemodifier.html","GenerateDateModifier method  function TOgMakeKeys.GenerateDateModifier: LongInt;","GenerateDateModifier creates a key modifier based on the current date. ",""],
["togmakekeys_generatekey.html","GenerateKey method  procedure TOgMakeKeys.GenerateKey (var Key; KeySize : Cardinal; const Str : string);","GenerateKey produces a key based on a supplied text string. ",""],
["togmakekeys_generatemachinemodifier.html","GenerateMachineModifier method  function TOgMakeKeys.GenerateMachineModifier: LongInt;","GenerateMachineModifier creates a key modifier based on the hardware information for the current machine. ",""],
["togmakekeys_generaterandomkey.html","GenerateRandomKey method  procedure TOgMakeKeys.GenerateRandomKey(var Key; KeySize : Cardinal);","GenerateRandomKey produces a key based on Delphi’s internal random number generator. ",""],
["togmakekeys_generatestringmodifier.html","GenerateStringModifier method  function TOgMakeKeys.GenerateStringModifier (const S : string) : LongInt;","GenerateStringModifier creates a key modifier based on the supplied string. ",""],
["togmakekeys_generateuniquemodifier.html","GenerateUniqueModifier method  function TOgMakeKeys.GenerateUniqueModifier: LongInt;","GenerateUniqueModifier creates a unique key modifier. ",""],
["togmakekeys_key.html","Key run-time property  property TOgMakeKeys.Key : TKey  TKey = array [0..15] of Byte;","Key is used to encode and decode release codes.  After a successful call to Execute, Key contains the selected key value. The key used to enc...",""],
["togmakekeys_keyfilename.html","KeyFileName property  property TOgMakeKeys.KeyFileName : string","KeyFileName is the name of the INI file used to store application names and their associated keys. ",""],
["togmakekeys_keytype.html","KeyType property  property TOgMakeKeys.KeyType : TKeyType  TKeyType = (ktRandom, ktMessageDigest, ktMessageDigestCS);  Default: ktMessageDigest","KeyType determines the type of key to generate.  After a successful call to Execute, KeyType contains one of these key types. ktRandom The ke...",""],
["togmakekeys_showhints.html","ShowHints property  property TOgMakeKeys.ShowHints : Boolean  Default: False","ShowHints determines whether hints are shown for the TOgMakeKeys dialogs.",""],
["tognetcodeevents.html","TOgNetCodeEvents","TOgNetCode Events OnChecked OnGetKey OnGetCode OnGetModifier",""],
["tognetcodemethods.html","TOgNetCodeMethods","TOgNetCode Methods CheckCode IsCodeValid IsRemoteDrive ResetAccessFile",""],
["tognetcodeproperties.html","TOgNetCodeProperties","TOgNetCode Properties ActiveUsers AutoCheck Code FileName InvalidUsers MaxUsers Modifier StoreCode StoreModifier",""],
["tognetcode_activeusers.html","ActiveUsers read-only property  property TOgNetCode.ActiveUsers : LongInt","ActiveUsers is the current number of users running the application.",""],
["tognetcode_component.html","TOgNetCode Component","TOgNetCode implements a Network Metering release code. This release code limits the number of concurrent instances of an application that are allo...",""],
["tognetcode_filename.html","FileName property  property TOgNetCode.FileName : string","FileName is the name of the Network Access File.  The Network Access File is used to determine if another instance of the application is auth...",""],
["tognetcode_invalidusers.html","InvalidUsers read-only property  property TOgNetCode.InvalidUsers : LongInt","InvalidUsers is the number of invalid user access slots in the Network Access File. ",""],
["tognetcode_isremotedrive.html","IsRemoteDrive method  function TOgNetCode.IsRemoteDrive(const ExePath : string) : Boolean;","IsRemoteDrive determines whether ExePath resides on a remote disk drive. ",""],
["tognetcode_maxusers.html","MaxUsers read-only property  property TOgNetCode.MaxUsers : LongInt","MaxUsers is the maximum number of concurrent users of the application.",""],
["tognetcode_resetaccessfile.html","ResetAccessFile method  function TOgNetCode.ResetAccessFile : Boolean;","ResetAccessFile resets the invalid slots in the Network Access File. ",""],
["togprotectexeevents.html","TOgProtectExeEvents","TOgProtectExe Events OnChecked",""],
["togprotectexemethods.html","TOgProtectExeMethods","TOgProtectExe Methods CheckExe StampExe UnStampExe",""],
["togprotectexeproperties.html","TOgProtectExeProperties","TOgProtectExe Properties AutoCheck CheckSize",""],
["togprotectexe_autocheck.html","AutoCheck property  property TOgProtectExe.AutoCheck : Boolean  Default: False","AutoCheck determines whether CheckExe is called automatically. ",""],
["togprotectexe_checkexe.html","CheckExe method  function TOgProtectExe.CheckExe(Report : Boolean) : TExeStatus;   TExeStatus = (exeSuccess, exeSizeError, exeIntegrityError, exeNotStamped);","CheckExe tests to see if the executable file was altered. ",""],
["togprotectexe_checksize.html","CheckSize property  property TOgProtectExe.CheckSize : Boolean  Default: True","CheckSize determines whether the size of the executable is tested. ",""],
["togprotectexe_component.html","TOgProtectExe Component","The TOgProtectExe component allows you to detect changes to your EXE file. The size of the EXE file and a 32-bit CRC (Cyclical Redundancy Check) v...",""],
["togprotectexe_onchecked.html","OnChecked event  property TOgProtectExe.OnChecked : TCheckedExeEvent  TCheckedExeEvent = procedure(Sender : TObject; Status : TExeStatus) of object;","OnChecked defines an event handler that is called after the executable is checked. ",""],
["togprotectexe_stampexe.html","StampExe method  function TOgProtectExe.StampExe (const FileName : string ; EraseMarker : Boolean) : Boolean;","StampExe marks the executable program with its size and a CRC value. ",""],
["togprotectexe_unstampexe.html","UnStampExe method  function TOgProtectExe.UnStampExe (const FileName : string) : Boolean;","UnStampExe reverses the effect of a call to StampExe. ",""],
["togregistrationcodeevents.html","TOgRegistrationCodeEvents","TOgRegistrationCode Events OnChecked OnGetKey OnGetCode OnGetModifier OnGetRegString",""],
["togregistrationcodemethods.html","TOgRegistrationCodeMethods","TOgRegistrationCode Methods CheckCode IsCodeValid",""],
["togregistrationcodeproperties.html","TOgRegistrationCodeProperties","TOgRegistrationCode Properties AutoCheck Code Modifier RegString StoreCode StoreModifier StoreRegString",""],
["togregistrationcode_component.html","TOgRegistrationCode Component","TOgRegistrationCode implements a Simple Registration release code. This release code ties the user’s name, company name, or some other textual dat...",""],
["togregistrationcode_ongetregstring.html","OnGetRegString event  property TOgRegistrationCode.OnGetRegString : TGetRegStringEvent  TGetRegStringEvent = procedure(Sender : TObject; var Value : string) of object;","OnGetRegString defines an event handler that is called to get the registration string. ",""],
["togregistrationcode_regstring.html","RegString property  property TOgRegistrationCode.RegString : string","RegString is the registration string used to create the release code. ",""],
["togregistrationcode_storeregstring.html","StoreRegString property  property TOgRegistrationCode.StoreRegString : Boolean  Default: True","StoreRegString determines whether the registration string value is stored as a resource at design time. ",""],
["togserialnumbercodeevents.html","TOgSerialNumberCodeEvents","TOgSerialNumberCode Events OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togserialnumbercodemethods.html","TOgSerialNumberCodeMethods","TOgSerialNumberCode Methods CheckCode GetValue IsCodeValid",""],
["togserialnumbercodeproperties.html","TOgSerialNumberCodeProperties","TOgSerialNumberCode Properties AutoCheck Code Modifier StoreCode StoreModifier",""],
["togserialnumbercode_component.html","TOgSerialNumberCode Component","TOgSerialNumberCode implements a Serial Number Registration release code. This release code ties a serial number to the release code. This release...",""],
["togserialnumbercode_getvalue.html","GetValue method  function TOgSerialNumberCode.GetValue : LongInt;","GetValue returns the serial number embedded in the release code.",""],
["togspecialcodeevents.html","TOgSpecialCodeEvents","TOgSpecialCode Events OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togspecialcodemethods.html","TOgSpecialCodeMethods","TOgSpecialCode Methods CheckCode GetValue IsCodeValid",""],
["togspecialcodeproperties.html","TOgSpecialCodeProperties","TOgSpecialCode Properties AutoCheck Code Modifier StoreCode StoreModifier",""],
["togspecialcode_component.html","TOgSpecialCode Component","TOgSpecialCode implements a Special Registration release code. This release code is based on a special value (a long integer) that can be used to ...",""],
["togspecialcode_getvalue.html","GetValue method  function TOgSpecialCode.GetValue : LongInt;","GetValue returns the special information embedded in the release code.",""],
["togusagecodeevents.html","TOgUsageCodeEvents","TOgUsageCode Events OnChangeCode OnChecked OnGetKey OnGetCode OnGetModifier",""],
["togusagecodemethods.html","TOgUsageCodeMethods","TOgUsageCode Methods CheckCode Decrease GetValue IsCodeValid",""],
["togusagecodeproperties.html","TOgUsageCodeProperties","TOgUsageCode Properties AutoCheck AutoDecrease Modifier StoreModifier",""],
["togusagecode_autodecrease.html","AutoDecrease property  property TOgUsageCode.AutoDecrease : Boolean  Default: True","AutoDecrease determines whether the usage count value is automatically decreased each time the application is run. ",""],
["togusagecode_component.html","TOgUsageCode Component","TOgUsageCode implements a Usage Count release code. This release code limits the number of times an application can be executed.",""],
["togusagecode_decrease.html","Decrease method  procedure TOgUsageCode.Decrease;","Decrease reduces the usage count value stored in the release code. ",""],
["togusagecode_getvalue.html","GetValue method  function TOgUsageCode.GetValue : LongInt;","GetValue returns the usage count embedded in the release code.",""],
["togusagecode_onchangecode.html","OnChangeCode event  property TOgUsageCode.OnChangeCode : TChangeCodeEvent  TChangeCodeEvent = procedure(Sender : TObject; Code : TCode) of object;","OnChangeCode defines an event handler that is called when a release code changes. ",""],
["ttmdcontext.html","TTMDContext","Enter topic text here.   TTMDContext = array [0..279] of Byte;  Defined in ogutil unit.",""],
["unlocknetaccessfile.html","UnlockNetAccessFile  function UnlockNetAccessFile (var NetAccess : TNetAccess) : Boolean;  TNetAccess = packed record    Fh         : Integer;    Key        : TKey;    CheckValue : Word;    Index      : Word;  end;","UnlockNetAccessFile unlocks an access slot in the network access file specified by FileName and returns false if an error occurs.",""]];
